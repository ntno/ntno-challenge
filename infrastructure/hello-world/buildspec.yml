################################################################################
# Copyright 2019 ntno                                                          #
#                                                                              #
# Licensed under the Apache License, Version 2.0 (the "License");              #
# you may not use this file except in compliance with the License.             #
# You may obtain a copy of the License at                                      #
#                                                                              #
#       http://www.apache.org/licenses/LICENSE-2.0                             #
#                                                                              #
# Unless required by applicable law or agreed to in writing, software          #
# distributed under the License is distributed on an "AS IS" BASIS,            #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.     #
# See the License for the specific language governing permissions and          #
# limitations under the License.                                               #
################################################################################


version: 0.2

phases:
  install:
    runtime-versions:
      docker: 18
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
      - echo Done log in
  build:
    commands:
      - echo Build started on `date`
      - echo Directory contents are
      - ls -ltra
      - chmod +x build-scripts/update-certs
      - ./build-scripts/update-certs
      - echo Directory contents are
      - ls -ltra
      - echo Building the Docker image...          
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG      
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Available docker images
      - docker image ls
      - docker save $IMAGE_REPO_NAME:$IMAGE_TAG | gzip -c > app.tar.gz
      - echo $IMAGE_REPO_NAME:$IMAGE_TAG > image-name.txt
      - cat image-name.txt
      - echo Directory contents are
      - ls -ltra
artifacts:
  files:
    - 'app.tar.gz'
    - 'image-name.txt'
    - 'appspec.yml'
    - 'deploy-scripts/*'
