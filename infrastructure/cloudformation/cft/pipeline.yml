AWSTemplateFormatVersion: 2010-09-09
Description: creates code commit repository and sns trigger topic 
Parameters:
  RepoName:
    Type: String
    Description: repository name
  RepoDescription:
    Type: String
    Description: repository description
  DomainTag:
    Type: String
    Description: resource tag for organization
  ProjectTag:
    Type: String
    Description: resource tag for organization
  HostResourceStackName:
    Type: String
    Description: name of the stack which provisioned the host resources for ec2 deployment
    Default: 'ntno-challenge-app-deploy'
Resources:
  TriggerSNS:
    Type: AWS::SNS::Topic
    Properties: 
      DisplayName: !Sub "${RepoName}-SNS"
      Tags: [{Key: domain, Value: !Ref DomainTag}, {Key: project, Value: !Ref ProjectTag}]
  CodeRepo:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: !Ref RepoName
      RepositoryDescription: !Ref RepoDescription
      Triggers:
      - Name: MasterTrigger
        DestinationArn:
          Ref: TriggerSNS
        Branches:
        - master            #empty array to trigger on all branches
        Events:
        - all
      Tags: [{Key: domain, Value: !Ref DomainTag}, {Key: project, Value: !Ref ProjectTag}]
  ImageRepo:
    Type: AWS::ECR::Repository
    Properties: 
      RepositoryName: !Ref RepoName
      Tags: [{Key: domain, Value: !Ref DomainTag}, {Key: project, Value: !Ref ProjectTag}]
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: 'sts:AssumeRole'
      RoleName: !Sub 'codebuild-${RepoName}-service-role-${AWS::StackName}'
      Tags: [{Key: domain, Value: !Ref DomainTag}, {Key: project, Value: !Ref ProjectTag}]
      Policies: 
        - PolicyName: 'CodeBuildPermissions'
          PolicyDocument: 
            Version: 2012-10-17
            Statement:
              - Sid: ArtifactBucketPermissions
                Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
                Effect: Allow
                Resource:
                  - !Sub 'arn:aws:s3:::ntno-code-pipeline-artifacts-us-east-2'
                  - !Sub 'arn:aws:s3:::ntno-code-pipeline-artifacts-us-east-2/*'
              - Sid: CreateLogsPermission
                Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'   #TODO - make less permissive
                  # - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${RepoName}'
                  # - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${RepoName}:*'
              - Sid: PullFromCodeCommitRepoPermission
                Effect: Allow
                Resource:
                  - !Sub 'arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${RepoName}'
                Action:
                  - 'codecommit:GitPull'
              - Sid: ReadWriteToEcrRepoPermissions
                Effect: Allow
                Action:
                  - 'ecr:BatchCheckLayerAvailability'
                  - 'ecr:GetDownloadUrlForLayer'
                  - 'ecr:GetRepositoryPolicy'
                  - 'ecr:ListImages'
                  - 'ecr:DescribeImages'
                  - 'ecr:BatchGetImage'
                  - 'ecr:InitiateLayerUpload'
                  - 'ecr:UploadLayerPart'
                  - 'ecr:CompleteLayerUpload'
                  - 'ecr:PutImage'
                Resource: 
                  - !GetAtt 
                    - ImageRepo
                    - Arn
              - Sid: EcrLoginPermission
                Effect: Allow
                Action:
                  - 'ecr:DescribeRepositories'
                  - 'ecr:GetAuthorizationToken'
                Resource: '*'
  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codedeploy.amazonaws.com
            Action: 'sts:AssumeRole'
      RoleName: !Sub 'codedeploy-${RepoName}-service-role-${AWS::StackName}'
      Tags: [{Key: domain, Value: !Ref DomainTag}, {Key: project, Value: !Ref ProjectTag}]
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole'
      Policies: 
        - PolicyName: 'CodeDeployPermissions'
          PolicyDocument: 
            Version: 2012-10-17
            Statement:
              - Sid: ReadArtifactBucketPermissions
                Action:
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
                Effect: Allow
                Resource:
                  - !Sub 'arn:aws:s3:::ntno-code-pipeline-artifacts-us-east-2'
                  - !Sub 'arn:aws:s3:::ntno-code-pipeline-artifacts-us-east-2/*'
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      RoleName: !Sub 'codepipeline-${RepoName}-service-role-${AWS::StackName}'
      Tags: [{Key: domain, Value: !Ref DomainTag}, {Key: project, Value: !Ref ProjectTag}]
      Policies: 
        - PolicyName: 'CodePipelinePermissions'
          PolicyDocument: 
            Version: 2012-10-17
            Statement:
              - Sid: CodeCommitPermissions
                Action:
                  - 'codecommit:GetBranch'
                  - 'codecommit:GetCommit'
                  - 'codecommit:GetUploadArchiveStatus'
                  - 'codecommit:UploadArchive'
                  - 'codecommit:CancelUploadArchive'
                Effect: Allow
                Resource: !GetAtt
                  - CodeRepo
                  - Arn
              - Sid: ArtifactBucketPermissions
                Action:
                  - 's3:PutObject'
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:GetBucketAcl'
                  - 's3:GetBucketLocation'
                Effect: Allow
                Resource:
                  - !Sub 'arn:aws:s3:::ntno-code-pipeline-artifacts-us-east-2'
                  - !Sub 'arn:aws:s3:::ntno-code-pipeline-artifacts-us-east-2/*'
              - Sid: CloudformationPermissions
                Action:
                  - 'cloudformation:ValidateTemplate'
                Effect: Allow
                Resource: '*'
              - Sid: CodeBuildPermissions
                Action:
                  - 'codebuild:BatchGetBuilds'
                  - 'codebuild:StartBuild'
                Effect: Allow
                Resource: !GetAtt 
                  - BuildProject
                  - Arn
              - Sid: EcrPermissions
                Action:
                  - 'ecr:DescribeImages'
                Effect: Allow
                Resource: '*'
  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties: 
      Artifacts: 
        EncryptionDisabled: False
        Type: CODEPIPELINE
        Packaging: ZIP
      BadgeEnabled: False
      Description: !Sub 'CodeBuild project for ${RepoName}'
      Environment: 
        # Certificate: String
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables: 
          - 
            Name: AWS_DEFAULT_REGION
            Type: PLAINTEXT
            Value: !Sub '${AWS::Region}'
          - 
            Name: AWS_ACCOUNT_ID
            Type: PLAINTEXT
            Value: !Sub '${AWS::AccountId}'
          - 
            Name: IMAGE_TAG
            Type: PLAINTEXT
            Value: latest
          - 
            Name: IMAGE_REPO_NAME
            Type: PLAINTEXT
            Value: !Ref RepoName
        Image: aws/codebuild/amazonlinux2-x86_64-standard:1.0	
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: True
        Type: LINUX_CONTAINER
      LogsConfig: 
        CloudWatchLogs: 
            Status: ENABLED
      Name: !Ref RepoName
      QueuedTimeoutInMinutes: 5
      ServiceRole: !Ref CodeBuildServiceRole
      Source: 
        BuildSpec: buildspec.yml
        GitCloneDepth: 0
        Location: !Sub 'https://git-codecommit.${AWS::Region}.amazonaws.com/v1/repos/${RepoName}'
        Type: CODEPIPELINE
      Tags: [{Key: domain, Value: !Ref DomainTag}, {Key: project, Value: !Ref ProjectTag}]
      TimeoutInMinutes: 10
  DeployApplication:
    Type: AWS::CodeDeploy::Application
  DeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties: 
      ApplicationName: !Ref DeployApplication
      DeploymentStyle: 
          DeploymentOption: WITHOUT_TRAFFIC_CONTROL
          DeploymentType: IN_PLACE
      Ec2TagSet:
        Ec2TagSetList:
          - Ec2TagGroup:
            - Key: 'aws:cloudformation:stack-name'
              Value: !Ref HostResourceStackName
              Type: KEY_AND_VALUE
      ServiceRoleArn: !GetAtt
        - CodeDeployServiceRole
        - Arn
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties: 
      ArtifactStore: 
        Location: 'ntno-code-pipeline-artifacts-us-east-2'
        Type: S3
      Name: !Ref RepoName
      RestartExecutionOnUpdate: True
      RoleArn: !GetAtt
        - CodePipelineServiceRole
        - Arn
      Stages: 
        - Name: FetchSource
          Actions: 
            - Name: Source
              ActionTypeId: 
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: '1'
              Configuration: 
                RepositoryName: !Ref RepoName
                BranchName: master
                PollForSourceChanges: True
              OutputArtifacts: 
                - Name: SourceArtifact
              Region: !Sub '${AWS::Region}'
              RunOrder: 1
        - Name: BuildSource
          Actions:
            - Name: Build
              ActionTypeId: 
                  Category: Build
                  Owner: AWS
                  Provider: CodeBuild
                  Version: '1'
              Configuration: 
                ProjectName: !Ref RepoName
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts: 
                - Name: BuildArtifact
              Region: !Sub '${AWS::Region}'
              RunOrder: 1
        - Name: DeployApp
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CodeDeploy
                Version: '1'
              Configuration: 
                ApplicationName: !Ref DeployApplication
                DeploymentGroupName: !Ref DeploymentGroup
              InputArtifacts: 
                - Name: BuildArtifact
              Region: !Sub '${AWS::Region}'
              RunOrder: 1
